import { DateTime } from "@arkecosystem/platform-sdk-intl";
import { BigNumber } from "@arkecosystem/platform-sdk-support";

export const TransactionFixture = {
	id: () => "ee4175091d9f4dacf5fed213711c3e0e4cc371e37afa7bce0429d09bcf3ecefe",
	blockId: () => "71fd1a494ded5430586f4dd1c79c3ac77bf38120e868c8f8980972b8075d67e9",
	type: () => "transfer",
	timestamp: () => DateTime.fromUnix(1596213281),
	confirmations: () => BigNumber.make(10),
	votes: () => ["10"],
	unvotes: () => ["10"],
	sender: () => "D8rr7B1d6TL6pf14LgMz4sKp1VBMs6YUYD",
	recipient: () => "D8rr7B1d6TL6pf14LgMz4sKp1VBMs6YUYD",
	recipients: () => [],
	amount: () => BigNumber.make(100).times(1e8),
	fee: () => BigNumber.make(21).times(1e8),
	memo: () => "Test",
	asset: () => ({ a: "b" }),
	isConfirmed: () => false,
	isSent: () => true,
	isReceived: () => false,
	isTransfer: () => true,
	isSecondSignature: () => false,
	isMultiSignature: () => false,
	isDelegateRegistration: () => false,
	isDelegateResignation: () => false,
	isVote: () => false,
	isUnvote: () => false,
	isIpfs: () => false,
	isMultiPayment: () => false,
	isHtlcLock: () => false,
	isHtlcClaim: () => false,
	isHtlcRefund: () => false,
	isEntityRegistration: () => false,
	isEntityResignation: () => false,
	isEntityUpdate: () => false,
	isBusinessEntityRegistration: () => false,
	isBusinessEntityResignation: () => false,
	isBusinessEntityUpdate: () => false,
	isDeveloperEntityRegistration: () => false,
	isDeveloperEntityResignation: () => false,
	isDeveloperEntityUpdate: () => false,
	isCorePluginEntityRegistration: () => false,
	isCorePluginEntityResignation: () => false,
	isCorePluginEntityUpdate: () => false,
	isDesktopPluginEntityRegistration: () => false,
	isDesktopPluginEntityResignation: () => false,
	isDesktopPluginEntityUpdate: () => false,
	isDelegateEntityRegistration: () => false,
	isDelegateEntityResignation: () => false,
	isDelegateEntityUpdate: () => false,
	isLegacyBusinessRegistration: () => false,
	isLegacyBusinessResignation: () => false,
	isLegacyBusinessUpdate: () => false,
	isLegacyBridgechainRegistration: () => false,
	isLegacyBridgechainResignation: () => false,
	isLegacyBridgechainUpdate: () => false,
	toObject: () => ({ a: "b" }),
	hasPassed: () => true,
	hasFailed: () => false,
	getMeta: () => "",
	setMeta: () => "",
	// IPFS Type
	hash: () => "QmPRqPTEEwx95WNcSsk6YQk7aGW9hoZbTF9zE92dBj9H68",
	// @ts-ignore
	explorerLink: () =>
		"https://explorer.ark.io/transaction/ee4175091d9f4dacf5fed213711c3e0e4cc371e37afa7bce0429d09bcf3ecefe",
	total: () => BigNumber.make(121).times(1e8),
	convertedTotal: () => BigNumber.ZERO,
	wallet: () => undefined,
	coin: () => undefined,
	data: () => undefined,
};
