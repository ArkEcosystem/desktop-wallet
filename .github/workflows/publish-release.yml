name: Publish Release

on: [push]

jobs:
    create-release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Create tag
              uses: actions/github-script@v4
              with:
                  github-token: ${{ github.token }}
                  script: |
                      const { data } = await github.request("https://api.github.com/repos/ArkEcosystem/desktop-wallet/releases/latest");
                      const { version } = require("./package.json");

                      github.repos.createRelease({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          tag_name: version,
                          name: `Version ${version}`,
                          body: (await github.request(`https://ghlogs.basecode.sh/ArkEcosystem/desktop-wallet/${data.tag_name}/develop`)).data,
                          draft: true,
                          prerelease: false,
                          target_commitish: context.sha,
                      })
    publish-linux:
        needs: ["create-release"]
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [14.x]
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Cache node modules
              uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Update System
              run: sudo apt-get update
            - name: Install snapcraft
              run: sudo snap install snapcraft --classic
            - name: Ledger
              run: sudo apt-get install libudev-dev libusb-1.0-0-dev
            - name: Install
              run: yarn global add node-gyp && yarn install --frozen-lockfile
            - name: Re-build bcrypto
              run: cd node_modules/bcrypto && npm install && cd ../../
            - name: Build & Publish
              run: yarn build:linux:publish
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Calculate Checksums for AppImage
              run: shasum -a 256 dist/target/ark-desktop-wallet-linux-x86_64-3.0.0.AppImage
            - name: Calculate Checksums for TAR
              run: shasum -a 256 dist/target/ark-desktop-wallet-linux-x64-3.0.0.tar.gz
            - name: Calculate Checksums for DEB
              run: shasum -a 256 dist/target/ark-desktop-wallet-linux-amd64-3.0.0.deb
            - name: VirusTotal Scan for AppImage
              run: |
                  UPLOAD_URL=$(curl -s --location --url 'https://www.virustotal.com/vtapi/v2/file/scan/upload_url?apikey=${{ secrets.VIRUSTOTAL_TOKEN }}' | jq -r .upload_url)
                  curl -s --url "$UPLOAD_URL" --form 'apikey=${{ secrets.VIRUSTOTAL_TOKEN }}' --form 'file=@dist/target/ark-desktop-wallet-linux-x86_64-3.0.0.AppImage' | jq -r .permalink
            - name: VirusTotal Scan for TAR
              run: |
                  UPLOAD_URL=$(curl -s --location --url 'https://www.virustotal.com/vtapi/v2/file/scan/upload_url?apikey=${{ secrets.VIRUSTOTAL_TOKEN }}' | jq -r .upload_url)
                  curl -s --url "$UPLOAD_URL" --form 'apikey=${{ secrets.VIRUSTOTAL_TOKEN }}' --form 'file=@dist/target/ark-desktop-wallet-linux-x64-3.0.0.tar.gz' | jq -r .permalink
            - name: VirusTotal Scan for DEB
              run: |
                  UPLOAD_URL=$(curl -s --location --url 'https://www.virustotal.com/vtapi/v2/file/scan/upload_url?apikey=${{ secrets.VIRUSTOTAL_TOKEN }}' | jq -r .upload_url)
                  curl -s --url "$UPLOAD_URL" --form 'apikey=${{ secrets.VIRUSTOTAL_TOKEN }}' --form 'file=@dist/target/ark-desktop-wallet-linux-amd64-3.0.0.deb' | jq -r .permalink
    publish-macos:
        needs: ["create-release"]
        runs-on: macos-latest
        strategy:
            matrix:
                node-version: [14.x]
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Cache node modules
              uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install
              run: yarn global add node-gyp && yarn install --frozen-lockfile
            - name: Prepare for app notarization
              run: |
                  mkdir -p ~/private_keys/
                  echo '${{ secrets.APPLE_API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8
            - name: Build & Publish
              run: yarn build:mac:publish
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
                  APPLE_API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_KEY_ISSUER_ID }}
                  CSC_LINK: ${{ secrets.CSC_LINK }}
                  CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
            - name: Calculate Checksums for DMG
              run: shasum -a 256 dist/target/ark-desktop-wallet-mac-3.0.0.dmg
            - name: Calculate Checksums for ZIP
              run: shasum -a 256 dist/target/ark-desktop-wallet-mac-3.0.0.zip
            - name: VirusTotal Scan for DMG
              run: |
                  UPLOAD_URL=$(curl -s --location --url 'https://www.virustotal.com/vtapi/v2/file/scan/upload_url?apikey=${{ secrets.VIRUSTOTAL_TOKEN }}' | jq -r .upload_url)
                  curl -s --url "$UPLOAD_URL" --form 'apikey=${{ secrets.VIRUSTOTAL_TOKEN }}' --form 'file=@dist/target/ark-desktop-wallet-mac-3.0.0.dmg' | jq -r .permalink
            - name: VirusTotal Scan for ZIP
              run: |
                  UPLOAD_URL=$(curl -s --location --url 'https://www.virustotal.com/vtapi/v2/file/scan/upload_url?apikey=${{ secrets.VIRUSTOTAL_TOKEN }}' | jq -r .upload_url)
                  curl -s --url "$UPLOAD_URL" --form 'apikey=${{ secrets.VIRUSTOTAL_TOKEN }}' --form 'file=@dist/target/ark-desktop-wallet-mac-3.0.0.zip' | jq -r .permalink
    publish-windows:
        needs: ["create-release"]
        runs-on: windows-latest
        strategy:
            matrix:
                node-version: [14.x]
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Cache node modules
              uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install
              run: yarn global add node-gyp && yarn install --frozen-lockfile
              shell: cmd
            - name: Build & Publish
              run: yarn build:win:publish
              shell: cmd
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Calculate Checksums for EXE
              run: Get-FileHash dist/target/ark-desktop-wallet-win-3.0.0.exe -Algorithm SHA256 | Format-List
              shell: powershell
